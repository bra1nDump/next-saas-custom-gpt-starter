# Since the ".env" file is gitignored, you can use the ".env.example" file to
# build a new ".env" file when you clone the repo. Keep this file up-to-date
# when you add new variables to `.env`.

# This file will be committed to version control, so make sure not to have any
# secrets in it. If you are cloning this repo, create a copy of this file named
# ".env" and populate it with your secrets.

# When adding additional environment variables, the schema in "/src/env.js"
# should be updated accordingly.

# Prisma
# https://www.prisma.io/docs/reference/database-reference/connection-urls#env
DATABASE_URL="postgresql://postgres:mysecretpassword@localhost:5432/postgres"

# Next Auth
# You can generate a new secret on the command line with:
# openssl rand -base64 32
# https://next-auth.js.org/configuration/options#secret
AUTH_SECRET="loool"
AUTH_URL="http://localhost:3000"

# Next Auth Google Provider
# 
# https://next-auth.js.org/providers/google
# 
# I suggest this tutorial for the google setup portion https://refine.dev/blog/nextauth-google-github-authentication-nextjs/#for-googleprovider-make-sure-you-have-a-google-account
AUTH_GOOGLE_ID="Something somthing"
AUTH_GOOGLE_SECRET="something somthing"

# Stripe

STRIPE_SECRET_KEY="Configure this in the stripe dashboard"
# This is stable - so once you get the secret it stays the same. We can use this fact to 
# run stripe listen --print-secret when creating our env variables in env.mjs
STRIPE_WEBHOOK_SECRET=$(stripe listen --print-secret)

STRIPE_PRODUCT_ID_PLUS="Configure this in the stripe dashboard"
STRIPE_PRODUCT_ID_PRO="Configure this in the stripe dashboard"